<?php

namespace MDurys\GupekBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * BoutRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BoutRepository extends EntityRepository
{
    /**
     * @param Bout | int $bout
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function queryByBout($bout)
    {
        return $this->getEntityManager()->createQueryBuilder()
            ->from(Bout::class, 'b')
            ->where('b.id = :bout')
            ->setParameter('bout', $bout);
    }

    /**
     * Get query builder, which selects a bouts for given meeting.
     *
     * @param Meeting | int $meeting
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function queryByMeeting($meeting)
    {
        return $this->getEntityManager()->createQueryBuilder()
            ->select('b')
            ->from(Bout::class, 'b')
            ->where('b.meeting = :meeting')
            ->setParameter('meeting', $meeting);
    }

    /**
     * @param Meeting | int $meeting
     *
     * @return Bout[]
     */
    public function getJoinUserAndGameByMeeting($meeting)
    {
        $qb = $this->queryByMeeting($meeting);
        return $qb
            ->select('b', 'bu', 'u', 'g')
            ->innerJoin('b.boutUsers', 'bu')
            ->innerJoin('bu.user', 'u')
            ->innerJoin('b.game', 'g')
            ->orderBy('b.id, bu.place, u.username')
            ->getQuery()
            ->getResult();
    }

    /**
     * @param $bout
     *
     * @return Bout | null
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getJoinUser($bout)
    {
        return $this->queryByBout($bout)
            ->select('b, mu, u')
            ->leftJoin('b.meetingUsers', 'mu')
            ->leftJoin('mu.user', 'u')
            ->getQuery()
            ->getOneOrNullResult();
    }
}
