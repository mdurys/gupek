<?php

namespace MDurys\GupekBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SeasonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SeasonRepository extends EntityRepository
{
    /**
     * Get basic information about given season: start date, end date and number of meetings.
     *
     * @param int $seasonId
     * @return array|null
     */
    public function getInfo($season)
    {
        $qb = $this->getEntityManager()
            ->getRepository('MDurysGupekBundle:Meeting')
            ->queryBySeason($season);
        return $qb
            ->select([$qb->expr()->min('m.date'), $qb->expr()->max('m.date'), $qb->expr()->count('m.id')])
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * Get player ranking (with details) for given season.
     *
     * @param int|\MDurys\GupekBundle\Entity\Season $season
     * @return array|null
     */
    public function getUserRanking($season)
    {
        return $this->getEntityManager()->createQueryBuilder()
            ->select('u.id, u.username, SUM(mu.score) AS points, SUM(mu.win) AS wins, COUNT(m.id) AS meetings, COUNT(mu.id) AS bouts, (SUM(mu.score) / COUNT(mu.id)) AS power, (SUM(mu.win) / COUNT(mu.id) * 100) AS efficiency')
            ->from('MDurysGupekBundle:MeetingUser', 'mu')
            ->innerJoin('mu.meeting', 'm')
            ->innerJoin('m.season', 's')
            ->innerJoin('mu.user', 'u')
            ->where('s.id = :season')
            ->groupBy('u.id')
            ->setParameter('season', $season)
            ->getQuery()
            ->getResult();
    }
}
